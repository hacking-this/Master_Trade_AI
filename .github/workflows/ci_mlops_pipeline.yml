name: MLOps Pipeline CI/CD

# Trigger this workflow on two events:
# 1. Every push to the main branch (for code changes/bug fixes)
# 2. Daily via CRON (to ensure the deployment image is always fresh)
on:
  push:
    branches:
      - main
  schedule:
    # Runs the pipeline daily at 00:30 UTC (Adjust time as needed for daily job)
    - cron: '30 0 * * *' 

jobs:
  # 1. Continuous Integration (CI): Test Code Quality and Dependencies
  ci_check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.9
        uses: actions/setup-python@v3
        with:
          python-version: '3.9'
          
      - name: Install dependencies for testing
        # Installs packages needed to test scripts inside the GitHub Runner environment
        run: pip install -r requirements.txt
        
      - name: Build Custom Airflow Image Test
        # This confirms that the Dockerfile can still build successfully with all packages
        # and serves as a quick self-check before the final push.
        run: docker build -t master-trader-airflow:test . 

  # 2. Continuous Deployment (CD): Build Final Image and Push to GHCR
  cd_docker_push:
    runs-on: ubuntu-latest
    needs: ci_check # Only run deployment if CI check succeeds
    steps:
      - uses: actions/checkout@v3
      
      # 1. Login to GitHub Container Registry (GHCR)
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          # GITHUB_TOKEN is automatically provided by GitHub Actions for security
          password: ${{ secrets.GITHUB_TOKEN }} 

      # 2. Set up Docker BuildX
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 3. Build and Push the final MLOps Image
      - name: Build and push MLOps image
        uses: docker/build-push-action@v5
        with:
          context: . # Build from the project root directory
          push: true
          # FINAL CORRECT TAG SYNTAX: Uses GitHub's environment variables to construct the full image name
          tags: ghcr.io/${{ github.repository | lower }}/master-trader-airflow:latest
          file: ./Dockerfile